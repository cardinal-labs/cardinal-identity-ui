"use strict";(self.webpackChunkcardinal_identity=self.webpackChunkcardinal_identity||[]).push([[770],{"./node_modules/@project-serum/sol-wallet-adapter/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>Wallet});var eventemitter3__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/eventemitter3/index.js"),eventemitter3__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_0__),_solana_web3_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@solana/web3.js/lib/index.browser.esm.js"),bs58__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/bs58/index.js"),bs58__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__),__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};class Wallet extends(eventemitter3__WEBPACK_IMPORTED_MODULE_0___default()){constructor(provider,_network){if(super(),this._network=_network,this._publicKey=null,this._popup=null,this._handlerAdded=!1,this._nextRequestId=1,this._autoApprove=!1,this._responsePromises=new Map,this.handleMessage=e=>{var _a;if(this._injectedProvider&&e.source===window||e.origin===(null===(_a=this._providerUrl)||void 0===_a?void 0:_a.origin)&&e.source===this._popup)if("connected"===e.data.method){const newPublicKey=new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(e.data.params.publicKey);this._publicKey&&this._publicKey.equals(newPublicKey)||(this._publicKey&&!this._publicKey.equals(newPublicKey)&&this.handleDisconnect(),this._publicKey=newPublicKey,this._autoApprove=!!e.data.params.autoApprove,this.emit("connect",this._publicKey))}else if("disconnected"===e.data.method)this.handleDisconnect();else if(e.data.result||e.data.error){const promises=this._responsePromises.get(e.data.id);if(promises){const[resolve,reject]=promises;e.data.result?resolve(e.data.result):reject(new Error(e.data.error))}}},this._beforeUnload=()=>{this.disconnect()},function isInjectedProvider(a){return function isObject(a){return"object"==typeof a&&null!==a}(a)&&"postMessage"in a&&"function"==typeof a.postMessage}(provider))this._injectedProvider=provider;else{if(!function isString(a){return"string"==typeof a}(provider))throw new Error("provider parameter must be an injected provider or a URL string.");this._providerUrl=new URL(provider),this._providerUrl.hash=new URLSearchParams({origin:window.location.origin,network:this._network}).toString()}}handleConnect(){var _a;return this._handlerAdded||(this._handlerAdded=!0,window.addEventListener("message",this.handleMessage),window.addEventListener("beforeunload",this._beforeUnload)),this._injectedProvider?new Promise((resolve=>{this.sendRequest("connect",{}),resolve()})):(window.name="parent",this._popup=window.open(null===(_a=this._providerUrl)||void 0===_a?void 0:_a.toString(),"_blank","location,resizable,width=460,height=675"),new Promise((resolve=>{this.once("connect",resolve)})))}handleDisconnect(){this._handlerAdded&&(this._handlerAdded=!1,window.removeEventListener("message",this.handleMessage),window.removeEventListener("beforeunload",this._beforeUnload)),this._publicKey&&(this._publicKey=null,this.emit("disconnect")),this._responsePromises.forEach((([,reject],id)=>{this._responsePromises.delete(id),reject(new Error("Wallet disconnected"))}))}sendRequest(method,params){return __awaiter(this,void 0,void 0,(function*(){if("connect"!==method&&!this.connected)throw new Error("Wallet not connected");const requestId=this._nextRequestId;return++this._nextRequestId,new Promise(((resolve,reject)=>{var _a,_b,_c,_d;this._responsePromises.set(requestId,[resolve,reject]),this._injectedProvider?this._injectedProvider.postMessage({jsonrpc:"2.0",id:requestId,method,params:Object.assign({network:this._network},params)}):(null===(_a=this._popup)||void 0===_a||_a.postMessage({jsonrpc:"2.0",id:requestId,method,params},null!==(_c=null===(_b=this._providerUrl)||void 0===_b?void 0:_b.origin)&&void 0!==_c?_c:""),this.autoApprove||null===(_d=this._popup)||void 0===_d||_d.focus())}))}))}get publicKey(){return this._publicKey}get connected(){return null!==this._publicKey}get autoApprove(){return this._autoApprove}connect(){return __awaiter(this,void 0,void 0,(function*(){this._popup&&this._popup.close(),yield this.handleConnect()}))}disconnect(){return __awaiter(this,void 0,void 0,(function*(){this._injectedProvider&&(yield this.sendRequest("disconnect",{})),this._popup&&this._popup.close(),this.handleDisconnect()}))}sign(data,display){return __awaiter(this,void 0,void 0,(function*(){if(!(data instanceof Uint8Array))throw new Error("Data must be an instance of Uint8Array");const response=yield this.sendRequest("sign",{data,display});return{signature:bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(response.signature),publicKey:new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(response.publicKey)}}))}signTransaction(transaction){return __awaiter(this,void 0,void 0,(function*(){const response=yield this.sendRequest("signTransaction",{message:bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(transaction.serializeMessage())}),signature=bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(response.signature),publicKey=new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(response.publicKey);return transaction.addSignature(publicKey,signature),transaction}))}signAllTransactions(transactions){return __awaiter(this,void 0,void 0,(function*(){const response=yield this.sendRequest("signAllTransactions",{messages:transactions.map((tx=>bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(tx.serializeMessage())))}),signatures=response.signatures.map((s=>bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(s))),publicKey=new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(response.publicKey);return transactions=transactions.map(((tx,idx)=>(tx.addSignature(publicKey,signatures[idx]),tx)))}))}diffieHellman(publicKey){return __awaiter(this,void 0,void 0,(function*(){if(!(publicKey instanceof Uint8Array))throw new Error("Data must be an instance of Uint8Array");return yield this.sendRequest("diffieHellman",{publicKey})}))}}}}]);